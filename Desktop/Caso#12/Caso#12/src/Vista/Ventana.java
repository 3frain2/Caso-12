/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;
import Modelo.MapManager;
import Modelo.Nodo;
import Modelo.Point;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
/**
 *
 * @author curso
 */
public class Ventana extends javax.swing.JFrame implements Observer  {
    MapManager map = new MapManager();
    Hashtable<JLabel, Nodo> hash = new Hashtable<JLabel, Nodo>();
    ArrayList<Integer> puntos = new ArrayList<Integer>();
    private Image img = Toolkit.getDefaultToolkit().getImage("ciudad.png");
    private boolean iniciar = false;
    /**
     * Creates new form 
     */
    public Ventana() {
        initComponents();
        map.addObserver(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel() {
      @Override
      protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(img, 0, 0, null);
        if (puntos.size()>=4) {
          for(int i=2; i<puntos.size(); i+=2) {
            g.drawLine(puntos.get(i-2), puntos.get(i-1), puntos.get(i), puntos.get(i+1));
          }
        }
      }

    };
    jButton1 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jPanel1MouseClicked(evt);
      }
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jPanel1MousePressed(evt);
      }
    });

    jButton1.setText("Iniciar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(638, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addContainerGap(567, Short.MAX_VALUE)
        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
    if (iniciar == false) {
      int x = evt.getX();
      int y = evt.getY();
      puntos.add(x);
      puntos.add(y);
      map.agregarPunto(x, y);
      jPanel1.print(jPanel1.getGraphics());
    }
  }//GEN-LAST:event_jPanel1MousePressed

  private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked

  }//GEN-LAST:event_jPanel1MouseClicked

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    iniciar = true;

    for(int i=0; i<puntos.size(); i+=2) {
      ImageIcon imageIcon = new ImageIcon("carro.jpg"); // load the image to a imageIcon
      Image image = imageIcon.getImage();
      Image carro = image.getScaledInstance(60, 60,  java.awt.Image.SCALE_SMOOTH); 
      ImageIcon iconCarro = new ImageIcon(carro);
      JButton boton = new JButton(iconCarro);
      boton.setBounds(puntos.get(i)-45, puntos.get(i+1)-45, 60, 60);
      boton.setBackground(Color.BLACK);
      jPanel1.add(boton);
      jPanel1.print(jPanel1.getGraphics());
      try {
        sleep(1000);
      } catch (InterruptedException ex) {
        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
      }
    }

  }//GEN-LAST:event_jButton1ActionPerformed
              
    public void update(Observable obj, Object arg) { 
        Nodo<Point> nodo = (Nodo<Point>)arg;
        
        JLabel label = new JLabel("");
        
        int x = (int)nodo.getValor().getX()-15;
        int y = (int)nodo.getValor().getY()-15;
        int width = 30;
        int height = 30;

        JButton boton = new JButton("");
        boton.setBounds(x, y, width, height);
        boton.setBackground(Color.red);
        jPanel1.add(boton);
        
        
        label.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                //Nodo<Point> nodoSelected = hash.get((JLabel)me.source);
            }
        });
        hash.put(label, nodo);
        this.add(label);
    }
  /*
  public void asd() {
  Nodo<Point> nodoSelected = hash.get()
  }
   */

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
    */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    
    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Ventana().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JPanel jPanel1;
  // End of variables declaration//GEN-END:variables
}
